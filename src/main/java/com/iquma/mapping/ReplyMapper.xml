<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iquma.dao.ReplyMapper">
    <resultMap id="BaseResultMap" type="com.iquma.pojo.Reply">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="tid" jdbcType="INTEGER" property="tid"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="uid" jdbcType="VARCHAR" property="uid"/>
        <result column="addTime" jdbcType="TIMESTAMP" property="addTime"/>
        <result column="likeCount" jdbcType="DOUBLE" property="likeCount" />
        <result column="hateCount" jdbcType="DOUBLE" property="hateCount" />
        <result column="rateCount" jdbcType="TINYINT" property="rateCount" />
        <result column="isBest" jdbcType="BIT" property="isBest"/>
        <result column="isBlock" jdbcType="BIT" property="isBlock"/>
        <result column="rateCount" jdbcType="INTEGER" property="rateCount"/>
        <association property="user" resultMap="UserResultMap" />
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.iquma.pojo.Reply">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>

    <resultMap id="UserResultMap" type="com.iquma.pojo.User">
        <id column="usid" jdbcType="VARCHAR" property="id"/>
        <result column="usname" jdbcType="VARCHAR" property="name"/>
        <result column="usavatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="usprestige" jdbcType="INTEGER" property="prestige"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, tid, title, uid, addTime, likeCount, hateCount, rateCount, isBest,isBlock, rateCount
  </sql>

    <sql id="Blob_Column_List">
    content
  </sql>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from topic_repinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>

    <insert id="insertSelective" parameterType="com.iquma.pojo.Reply">
        insert into topic_repinfo
        (tid,title,uid,addTime,likeCount,hateCount,rateCount,isBest,isBlock,rateCount,content)
        values (#{tid,jdbcType=INTEGER},#{title,jdbcType=VARCHAR},#{uid,jdbcType=VARCHAR},#{addTime,jdbcType=TIMESTAMP},#{likeCount,jdbcType=DOUBLE},#{hateCount,jdbcType=DOUBLE},#{rateCount,jdbcType=TINYINT},#{isBest,jdbcType=BIT},#{isBlock,jdbcType=BIT},#{rateCount,jdbcType=INTEGER},#{content,jdbcType=LONGVARCHAR})
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.iquma.pojo.Reply">
        update topic_repinfo
        <set>
            <if test="tid != null">
                tid = #{tid,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="uid != null">
                uid = #{uid,jdbcType=VARCHAR},
            </if>
            <if test="addTime != null">
                addTime = #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="likeCount != null">
                likeCount = #{likeCount,jdbcType=DOUBLE},
            </if>
            <if test="hateCount != null">
                hateCount = #{hateCount,jdbcType=DOUBLE},
            </if>
            <if test="rateCount != null">
                rateCount = #{rateCount,jdbcType=TINYINT},
            </if>
            <if test="isBest != null">
                isBest = #{isBest,jdbcType=BIT},
            </if>
            <if test="isBlock != null">
                isBlock = #{isBlock,jdbcType=BIT},
            </if>
            <if test="rateCount != null">
                rateCount = #{rateCount,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="changeStatusByPrimaryKey" parameterType="java.lang.Integer">
        update topic_repinfo
        set isBlock = true where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="adopt" parameterType="java.lang.Integer">
        update topic_repinfo
        set isBest = ! isBest where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        r.id, r.tid, r.title, r.uid, u.name as usname, u.avatar as usavatar, r.addTime, r.addTime, r.likeCount, r.hateCount, r.rateCount, r.isBest,r.isBlock, r.rateCount, r.content, u.prestige as usprestige
        from topic_repinfo r
        left join user_basinfo u on r.uid = u.id
        where r.id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectsCount" parameterType="com.iquma.pojo.Reply" resultType="java.lang.Integer" >
        select count(r.id)
        from topic_repinfo r
        left join user_basinfo u on r.uid = u.id
        <trim prefix="where" prefixOverrides="and">
            <if test="id != null">
                id = #{id,jdbcType=INTEGER}
            </if>
            <if test="tid != null">
               and tid = #{tid,jdbcType=INTEGER}
            </if>
            <if test="uid != null">
               and uid = #{uid,jdbcType=VARCHAR}
            </if>
        </trim>
    </select>

    <select id="selectsByPage" resultMap="ResultMapWithBLOBs">
        select
        r.id, r.tid, r.title, r.uid, u.name as usname, u.avatar as usavatar, r.addTime, r.likeCount, r.hateCount, r.rateCount, r.isBest,r.isBlock, r.rateCount, r.content, u.prestige as usprestige
        from topic_repinfo r
        left join user_basinfo u on r.uid = u.id
        where r.id in (
        select temp.id from (
        select id from topic_repinfo tr
        <trim prefix="where" prefixOverrides="and">
            <if test="rep.id != null">
                tr.id = #{rep.id}
            </if>
            <if test="rep.tid != null">
                and tr.tid = #{rep.tid}
            </if>
            <if test="rep.uid != null">
                and tr.uid = #{rep.uid}
            </if>
        </trim>
        ORDER BY tr.isBest desc,tr.rateCount desc
        limit ${start},10) as temp
        )
        ORDER BY r.isBest desc,r.rateCount desc
    </select>

    <select id="selectsByPageSorted" resultMap="ResultMapWithBLOBs" >
        select
        r.id, r.tid, r.title, r.uid, u.name as usname, u.avatar as usavatar, r.addTime, r.addTime, r.likeCount, r.hateCount, r.rateCount, r.isBest,r.isBlock, r.rateCount, r.content, u.prestige as usprestige
        from topic_repinfo r
        left join user_basinfo u on r.uid = u.id
        where r.id in (
        select temp.id from (
        select id from topic_repinfo tr
        <trim prefix="where" prefixOverrides="and">
            <if test="rep.id != null">
                tr.id = #{rep.id}
            </if>
            <if test="rep.tid != null">
                and tr.tid = #{rep.tid}
            </if>
            <if test="rep.uid != null">
                and tr.uid = #{rep.uid}
            </if>
        </trim>
        ORDER BY tr.addTime desc
        limit ${start},10) as temp
        )
        ORDER BY r.addTime desc
    </select>
</mapper>