<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iquma.dao.TopicMapper">
  <resultMap id="BaseResultMap" type="com.iquma.pojo.Topic">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="sec" jdbcType="VARCHAR" property="sec" />
    <result column="tid" jdbcType="TINYINT" property="tid" />
    <result column="aid" jdbcType="VARCHAR" property="aid" />
    <result column="attid" jdbcType="INTEGER" property="attid" />
    <result column="addTime" jdbcType="TIMESTAMP" property="addTime" />
    <result column="reTime" jdbcType="TIMESTAMP" property="reTime" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="viewCount" jdbcType="INTEGER" property="viewCount" />
    <result column="likeCount" jdbcType="DOUBLE" property="likeCount" />
    <result column="hateCount" jdbcType="DOUBLE" property="hateCount" />
    <result column="rateCount" jdbcType="TINYINT" property="rateCount" />
    <result column="replyCount" jdbcType="INTEGER" property="replyCount" />
    <result column="hasBest" jdbcType="INTEGER" property="hasBest" />
    <result column="isBlock" jdbcType="BIT" property="isBlock" />
    <result column="noReply" jdbcType="BIT" property="noReply" />
    <result column="isHigh" jdbcType="BIT" property="isHigh" />
    <association property="user" resultMap="UserResultMap" />
    <association property="tag" resultMap="TagResultMap" />
    <association property="attachment" resultMap="AttachmentResultMap" />
  </resultMap>

  <resultMap id="UserResultMap" type="com.iquma.pojo.User">
    <id column="userid" jdbcType="VARCHAR" property="id"/>
    <result column="username" jdbcType="VARCHAR" property="name"/>
  </resultMap>

  <resultMap id="TagResultMap" type="com.iquma.pojo.Tag">
    <id column="tagid" jdbcType="TINYINT" property="id" />
    <result column="tagname" jdbcType="VARCHAR" property="name" />
    <result column="tagpath" jdbcType="VARCHAR" property="path" />
  </resultMap>

  <resultMap id="AttachmentResultMap" type="com.iquma.pojo.Attachment">
    <id column="attId" jdbcType="INTEGER" property="id" />
    <result column="attName" jdbcType="VARCHAR" property="name" />
    <result column="attSize" jdbcType="DOUBLE" property="size" />
    <result column="attPath" jdbcType="VARCHAR" property="path" />
    <result column="attPrice" jdbcType="TINYINT" property="price" />
  </resultMap>

  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.iquma.pojo.Topic">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    t.id as id, t.title, t.sec, t.aid, u.name as username, q.name as tagname, t.addTime, t.reTime, t.content, t.viewCount, t.likeCount, t.hateCount, t.rateCount, t.replyCount, t.hasBest, t.isBlock, t.isHigh, t.noReply, a.id as attId, a.name as attName, a.size as attSize, a.path as attPath, a.price as attPrice
    from topic_topinfo t
    left join user_basinfo u on t.aid = u.id
    left join common_tag q on t.tid = q.id
    left join topic_attinfo a on t.attid = a.id
    where t.id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from topic_topinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.iquma.pojo.Topic">
    insert into topic_topinfo (title, sec, tid,
      aid, attid,addTime, reTime,
      viewCount, likeCount, hateCount, rateCount, replyCount, hasBest, isBlock, isHigh, noReply, content)
    values (#{title,jdbcType=VARCHAR}, #{sec,jdbcType=VARCHAR}, #{tid,jdbcType=TINYINT},#{aid,jdbcType=VARCHAR}, #{attid,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, #{reTime,jdbcType=TIMESTAMP},#{viewCount,jdbcType=INTEGER}, #{likeCount,jdbcType=DOUBLE}, #{hateCount,jdbcType=DOUBLE},#{rateCount,jdbcType=TINYINT}, #{replyCount,jdbcType=INTEGER}, #{hasBest,jdbcType=INTEGER}, #{isBlock,jdbcType=BIT},#{isHigh,jdbcType=BIT},#{noReply,jdbcType=BIT},
      #{content,jdbcType=LONGVARCHAR})
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.iquma.pojo.Topic">
    update topic_topinfo
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="sec != null">
        sec = #{sec,jdbcType=VARCHAR},
      </if>
      <if test="tid != null">
        tid = #{tid,jdbcType=TINYINT},
      </if>
      <if test="aid != null">
        aid = #{aid,jdbcType=VARCHAR},
      </if>
      <if test="attid != null">
        attid = #{attid, jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        addTime = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reTime != null">
        reTime = #{reTime,jdbcType=TIMESTAMP},
      </if>
      <if test="viewCount != null">
        viewCount = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        likeCount = #{likeCount,jdbcType=DOUBLE},
      </if>
      <if test="hateCount != null">
        hateCount = #{hateCount,jdbcType=DOUBLE},
      </if>
      <if test="rateCount != null">
        rateCount = #{rateCount,jdbcType=TINYINT},
      </if>
      <if test="replyCount != null">
        replyCount = #{replyCount,jdbcType=INTEGER},
      </if>
      <if test="hasBest != null">
        hasBest = #{hasBest,jdbcType=INTEGER},
      </if>
      <if test="isBlock != null">
        isBlock = #{isBlock,jdbcType=BIT},
      </if>
      <if test="isHigh != null">
        isHigh = #{isHigh,jdbcType=BIT},
      </if>
      <if test="noReply != null">
        noReply = #{noReply,jdbcType=BIT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="increaseReply" parameterType="java.lang.Integer">
    update topic_topinfo
    set replyCount = replyCount + 1
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="reduceReply" parameterType="java.lang.Integer">
    update topic_topinfo
    set replyCount = replyCount - 1
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="increaseViewCount" parameterType="java.lang.Integer">
    update topic_topinfo
    set viewCount = viewCount + 1
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="adopt" parameterType="java.lang.Integer">
    update topic_topinfo
    set hasBest = true
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="changeStatusByPrimaryKey" parameterType="java.lang.Integer">
    update topic_topinfo
    set isBlock = true where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectsCount" resultType="java.lang.Integer">
    select count(id)
    from topic_topinfo
    <where>
      <if test="sec != null">
        sec = #{sec,jdbcType=VARCHAR}
      </if>
      <if test="tid != null">
        and tid in (select id from common_tag  where find_in_set(#{tid,jdbcType=TINYINT},path))
      </if>
      <if test="aid != null">
        and aid = #{aid,jdbcType=VARCHAR}
      </if>
      <if test="noReply != null">
        and noReply = #{noReply,jdbcType=BIT}
      </if>
      <if test="isHigh != null">
        and isHigh = #{isHigh,jdbcType=BIT}
      </if>
    </where>
  </select>

  <select id="selectsByPage" resultMap="BaseResultMap">
    select
    t.id as id, t.title, t.sec, t.aid, u.name as username, q.name as tagname,t.content, t.reTime, t.viewCount,t.rateCount, t.replyCount, t.isBlock ,t.isHigh, t.noReply
    from topic_topinfo t
    left join user_basinfo u on t.aid = u.id
    left join common_tag q on t.tid = q.id
    where t.id in (select  temp.id from ( select id from topic_topinfo
    <where>
      <if test="top.sec != null">
       sec = #{top.sec}
      </if>
      <if test="top.tid != null">
        and tid in (select id from common_tag  where find_in_set(#{top.tid},path))
      </if>
      <if test="top.aid != null">
        and aid = #{top.aid}
      </if>
      <if test="top.noReply != null">
        and noReply = #{top.noReply}
      </if>
      <if test="top.isHigh != null">
        and isHigh = #{top.isHigh}
      </if>
    </where>
    order by reTime desc
    limit ${start},10
    ) as temp ) order by t.reTime desc
  </select>

  <select id="selectsRevelant" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id,sec
    from topic_topinfo
    where aid = #{aid,jdbcType=VARCHAR}
  </select>

</mapper>